@startuml
class HumanFactor {
    boolean : isFullyAnswered()
    double : getLatestAverageScore()
    pendiente : getImpactOrRelevance()
}
class HumanFactorType {
    String title
    String description
    boolean onlyOnce
}
class Action {
    
}
class ActionType {
    String title
    String description
}
class Question {
    boolean : isAnswered()
    double : getLatestScore()
    void : addAnswer(Answer answer)
    Answer : getLatestAnswer()
}
class QuestionType {
    String questionText
}
abstract class User
class Answer {
    LocalDateTime creationTime
}
class TeamMember
class TeamManager
class BibliographicSource {
    String authors
    LocalDate publicationDate
    String title
}
class Team {

}

Answer "0..*" <--*  Question
Question "1..*" <-* HumanFactor
Question -> QuestionType
HumanFactor "1..*" -- "0..*" Action
HumanFactor --> HumanFactor : depends on
HumanFactor -> HumanFactorType
User <|-- TeamMember
User <|-- TeamManager
TeamMember "0..*" --* Team
TeamManager "1" -- "1" Team
ActionType -> BibliographicSource
Action -> ActionType
HumanFactorType --> BibliographicSource
QuestionType <--* HumanFactorType
User -> HumanFactor
@enduml